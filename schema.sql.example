-- work in progress, for postgres 12

    -- for warn addon
    CREATE TABLE IF NOT EXISTS warns
    (
        warnID INT GENERATED BY DEFAULT AS IDENTITY (START WITH 300 INCREMENT BY 1),
        userID BIGINT,
        authorID BIGINT,
        guildID BIGINT,
        time_stamp TIMESTAMP DEFAULT NOW(),
        reason TEXT
    );
    -- set warnid to a start value

    -- for staffroles
    CREATE TABLE IF NOT EXISTS roles
    (
        guildID BIGINT PRIMARY KEY,
        modRole BIGINT,
        adminRole BIGINT,
        ownerRole BIGINT,
        approvedRole BIGINT,
        mutedRole BIGINT
    );


    -- might add timed mutes here in the future
    -- for mute addon
    CREATE TABLE IF NOT EXISTS mutes
    (
        id SERIAL PRIMARY KEY,
        userID BIGINT,
        authorID BIGINT,
        guildID BIGINT,
        reason TEXT
    );

    CREATE INDEX IF NOT EXISTS warns_idx ON warns (userID, authorID);
    CREATE INDEX IF NOT EXISTS mutes_idx ON mutes (userID, authorID);
    CREATE INDEX IF NOT EXISTS role_idx ON roles (guildID);

    -- for discord logging
    CREATE TABLE IF NOT EXISTS log_channels
    (
        guildID BIGINT PRIMARY KEY,
        modlogs BIGINT,
        messagelogs BIGINT,
        memberlogs BIGINT,
        auditlogs BIGINT,
        filterlogs BIGINT
    );

    -- guild settings for core bot
    CREATE TABLE IF NOT EXISTS guild_settings
    (
        guildID BIGINT PRIMARY KEY,
        approvalSystem BOOLEAN DEFAULT FALSE,
        approvalchannel BIGINT,
        enableJoinLeaveLogs BOOLEAN DEFAULT TRUE,
        enableCoreMessageLogs BOOLEAN DEFAULT TRUE,
        warn_punishments jsonb,
        prefixes TEXT[]

    );

    CREATE INDEX IF NOT EXISTS guild_settings_idx ON guild_settings (guildID);

    -- for approval system
    CREATE TABLE IF NOT EXISTS approvedMembers
    (
        userID BIGINT,
        guildID BIGINT
    );

    CREATE INDEX IF NOT EXISTS approved_idx ON approvedMembers (userID);


    CREATE TABLE IF NOT EXISTS bans
    (
        id SERIAL PRIMARY KEY,
        userID BIGINT,
        authorID BIGINT,
        guildID BIGINT,
        reason TEXT
    );

    CREATE INDEX IF NOT EXISTS bans_idx ON bans (userID);

    -- custom cog schemas, will be moved and contained in their cogs eventually:tm:

    -- for memes custom cog
    CREATE TABLE IF NOT EXISTS memes (
        guildid BIGINT PRIMARY KEY,
        guildmemes jsonb
    );

    -- for toggleroles custom cog
    CREATE TABLE IF NOT EXISTS toggleroles (
    guildid BIGINT PRIMARY KEY,
    roles jsonb
    );

    -- for colors custom cog
    CREATE TABLE IF NOT EXISTS colors (
    guildid BIGINT PRIMARY KEY,
    colormode VARCHAR(9) DEFAULT 'disabled',
    communal_role_data jsonb,
    personal_role_data jsonb
    );

    -- for accountinfo
    CREATE TABLE IF NOT EXISTS accountinfo (
    userid BIGINT PRIMARY KEY,
    accounts jsonb
    );

     -- for trusted users
    CREATE TABLE IF NOT EXISTS trustedusers (
        guildid BIGINT PRIMARY KEY,
        trusteduid BIGINT[]
    );

     CREATE TABLE IF NOT EXISTS channel_block (
        userid BIGINT NOT NULL,
        guildid BIGINT NOT NULL,
        blocktype TEXT[] NOT NULL,
        channelid BIGINT NOT NULL,
        reason TEXT
    );

    CREATE TABLE IF NOT EXISTS timed_jobs (
        id SERIAL PRIMARY KEY,
        type TEXT NOT NULL,
        expiration TIMESTAMP NOT NULL,
        extra jsonb
    );

    CREATE TABLE IF NOT EXISTS filtered_words (
        id SERIAL PRIMARY KEY,
        word TEXT,
        guild_id BIGINT,
        punishment TEXT
    );

    CREATE TABLE IF NOT EXISTS whitelisted_channels (
        channel_id BIGINT PRIMARY KEY,
        guild_id BIGINT
    );

    CREATE TABLE IF NOT EXISTS whitelisted_roles (
        role_id BIGINT PRIMARY KEY,
        guild_id BIGINT
    );